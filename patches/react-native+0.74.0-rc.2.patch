diff --git a/node_modules/react-native/index.js b/node_modules/react-native/index.js
index f087b70..73cf07a 100644
--- a/node_modules/react-native/index.js
+++ b/node_modules/react-native/index.js
@@ -8,6 +8,7 @@
  * @flow
  */
 
+'use client';
 'use strict';
 
 // APIs
@@ -92,9 +93,6 @@ import typeof useWindowDimensions from './Libraries/Utilities/useWindowDimension
 import typeof Vibration from './Libraries/Vibration/Vibration';
 import typeof YellowBox from './Libraries/YellowBox/YellowBoxDeprecated';
 
-const warnOnce = require('./Libraries/Utilities/warnOnce');
-const invariant = require('invariant');
-
 export type HostComponent<T> = _HostComponentInternal<T>;
 
 module.exports = {
@@ -140,16 +138,6 @@ module.exports = {
   get Pressable(): Pressable {
     return require('./Libraries/Components/Pressable/Pressable').default;
   },
-  // $FlowFixMe[value-as-type]
-  get ProgressBarAndroid(): ProgressBarAndroid {
-    warnOnce(
-      'progress-bar-android-moved',
-      'ProgressBarAndroid has been extracted from react-native core and will be removed in a future release. ' +
-        "It can now be installed and imported from '@react-native-community/progress-bar-android' instead of 'react-native'. " +
-        'See https://github.com/react-native-progress-view/progress-bar-android',
-    );
-    return require('./Libraries/Components/ProgressBarAndroid/ProgressBarAndroid');
-  },
   get RefreshControl(): RefreshControl {
     return require('./Libraries/Components/RefreshControl/RefreshControl');
   },
@@ -224,15 +212,6 @@ module.exports = {
   get BackHandler(): BackHandler {
     return require('./Libraries/Utilities/BackHandler');
   },
-  get Clipboard(): Clipboard {
-    warnOnce(
-      'clipboard-moved',
-      'Clipboard has been extracted from react-native core and will be removed in a future release. ' +
-        "It can now be installed and imported from '@react-native-clipboard/clipboard' instead of 'react-native'. " +
-        'See https://github.com/react-native-clipboard/clipboard',
-    );
-    return require('./Libraries/Components/Clipboard/Clipboard');
-  },
   get DeviceInfo(): DeviceInfo {
     return require('./Libraries/Utilities/DeviceInfo');
   },
@@ -285,15 +264,6 @@ module.exports = {
   get PixelRatio(): PixelRatio {
     return require('./Libraries/Utilities/PixelRatio').default;
   },
-  get PushNotificationIOS(): PushNotificationIOS {
-    warnOnce(
-      'pushNotificationIOS-moved',
-      'PushNotificationIOS has been extracted from react-native core and will be removed in a future release. ' +
-        "It can now be installed and imported from '@react-native-community/push-notification-ios' instead of 'react-native'. " +
-        'See https://github.com/react-native-push-notification/ios',
-    );
-    return require('./Libraries/PushNotificationIOS/PushNotificationIOS');
-  },
   get Settings(): Settings {
     return require('./Libraries/Settings/Settings');
   },
@@ -374,376 +344,4 @@ module.exports = {
   get RootTagContext(): RootTagContext {
     return require('./Libraries/ReactNative/RootTag').RootTagContext;
   },
-  get unstable_enableLogBox(): () => void {
-    return () =>
-      console.warn(
-        'LogBox is enabled by default so there is no need to call unstable_enableLogBox() anymore. This is a no op and will be removed in the next version.',
-      );
-  },
 };
\ No newline at end of file
-
-if (__DEV__) {
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ART. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ART. */
-  Object.defineProperty(module.exports, 'ART', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ART has been removed from React Native. ' +
-          "Please upgrade to use either 'react-native-svg' or a similar package. " +
-          "If you cannot upgrade to a different library, please install the deprecated '@react-native-community/art' package. " +
-          'See https://github.com/react-native-art/art',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ListView. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ListView. */
-  Object.defineProperty(module.exports, 'ListView', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ListView has been removed from React Native. ' +
-          'See https://fb.me/nolistview for more information or use ' +
-          '`deprecated-react-native-listview`.',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access SwipeableListView. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access SwipeableListView. */
-  Object.defineProperty(module.exports, 'SwipeableListView', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'SwipeableListView has been removed from React Native. ' +
-          'See https://fb.me/nolistview for more information or use ' +
-          '`deprecated-react-native-swipeable-listview`.',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access WebView. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access WebView. */
-  Object.defineProperty(module.exports, 'WebView', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'WebView has been removed from React Native. ' +
-          "It can now be installed and imported from 'react-native-webview' instead of 'react-native'. " +
-          'See https://github.com/react-native-webview/react-native-webview',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access NetInfo. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access NetInfo. */
-  Object.defineProperty(module.exports, 'NetInfo', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'NetInfo has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/netinfo' instead of 'react-native'. " +
-          'See https://github.com/react-native-netinfo/react-native-netinfo',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access CameraRoll. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access CameraRoll. */
-  Object.defineProperty(module.exports, 'CameraRoll', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'CameraRoll has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-camera-roll/camera-roll' instead of 'react-native'. " +
-          'See https://github.com/react-native-cameraroll/react-native-cameraroll',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ImageStore. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ImageStore. */
-  Object.defineProperty(module.exports, 'ImageStore', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ImageStore has been removed from React Native. ' +
-          'To get a base64-encoded string from a local image use either of the following third-party libraries:' +
-          "* expo-file-system: `readAsStringAsync(filepath, 'base64')`" +
-          "* react-native-fs: `readFile(filepath, 'base64')`",
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ImageEditor. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ImageEditor. */
-  Object.defineProperty(module.exports, 'ImageEditor', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ImageEditor has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/image-editor' instead of 'react-native'. " +
-          'See https://github.com/callstack/react-native-image-editor',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access TimePickerAndroid. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access TimePickerAndroid. */
-  Object.defineProperty(module.exports, 'TimePickerAndroid', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'TimePickerAndroid has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. " +
-          'See https://github.com/react-native-datetimepicker/datetimepicker',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ToolbarAndroid. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ToolbarAndroid. */
-  Object.defineProperty(module.exports, 'ToolbarAndroid', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ToolbarAndroid has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/toolbar-android' instead of 'react-native'. " +
-          'See https://github.com/react-native-toolbar-android/toolbar-android',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ViewPagerAndroid. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ViewPagerAndroid. */
-  Object.defineProperty(module.exports, 'ViewPagerAndroid', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ViewPagerAndroid has been removed from React Native. ' +
-          "It can now be installed and imported from 'react-native-pager-view' instead of 'react-native'. " +
-          'See https://github.com/callstack/react-native-pager-view',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access CheckBox. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access CheckBox. */
-  Object.defineProperty(module.exports, 'CheckBox', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'CheckBox has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/checkbox' instead of 'react-native'. " +
-          'See https://github.com/react-native-checkbox/react-native-checkbox',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access SegmentedControlIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access SegmentedControlIOS. */
-  Object.defineProperty(module.exports, 'SegmentedControlIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'SegmentedControlIOS has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-segmented-control/segmented-control' instead of 'react-native'." +
-          'See https://github.com/react-native-segmented-control/segmented-control',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access StatusBarIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access StatusBarIOS. */
-  Object.defineProperty(module.exports, 'StatusBarIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'StatusBarIOS has been removed from React Native. ' +
-          'Has been merged with StatusBar. ' +
-          'See https://reactnative.dev/docs/statusbar',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access PickerIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access PickerIOS. */
-  Object.defineProperty(module.exports, 'PickerIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'PickerIOS has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. " +
-          'See https://github.com/react-native-picker/picker',
-      );
-    },
-  });
-
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access Picker. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access Picker. */
-  Object.defineProperty(module.exports, 'Picker', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'Picker has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. " +
-          'See https://github.com/react-native-picker/picker',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access DatePickerAndroid. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access DatePickerAndroid. */
-  Object.defineProperty(module.exports, 'DatePickerAndroid', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'DatePickerAndroid has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. " +
-          'See https://github.com/react-native-datetimepicker/datetimepicker',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access MaskedViewIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access MaskedViewIOS. */
-  Object.defineProperty(module.exports, 'MaskedViewIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'MaskedViewIOS has been removed from React Native. ' +
-          "It can now be installed and imported from '@react-native-masked-view/masked-view' instead of 'react-native'. " +
-          'See https://github.com/react-native-masked-view/masked-view',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access AsyncStorage. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access AsyncStorage. */
-  Object.defineProperty(module.exports, 'AsyncStorage', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'AsyncStorage has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. " +
-          'See https://github.com/react-native-async-storage/async-storage',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ImagePickerIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ImagePickerIOS. */
-  Object.defineProperty(module.exports, 'ImagePickerIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ImagePickerIOS has been removed from React Native. ' +
-          "Please upgrade to use either 'react-native-image-picker' or 'expo-image-picker'. " +
-          "If you cannot upgrade to a different library, please install the deprecated '@react-native-community/image-picker-ios' package. " +
-          'See https://github.com/rnc-archive/react-native-image-picker-ios',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ProgressViewIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ProgressViewIOS. */
-  Object.defineProperty(module.exports, 'ProgressViewIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ProgressViewIOS has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/progress-view' instead of 'react-native'. " +
-          'See https://github.com/react-native-progress-view/progress-view',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access DatePickerIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access DatePickerIOS. */
-  Object.defineProperty(module.exports, 'DatePickerIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'DatePickerIOS has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. " +
-          'See https://github.com/react-native-datetimepicker/datetimepicker',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access Slider. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access Slider. */
-  Object.defineProperty(module.exports, 'Slider', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'Slider has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. " +
-          'See https://github.com/callstack/react-native-slider',
-      );
-    },
-  });
-}
